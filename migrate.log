2024-01-19T16:23:08.961Z
cwd: ~/GitHub Prototypes/srel-prototype
package: govuk-prototype-kit@13.16.0
argv: /usr/local/bin/node ~/.npm/_npx/751a68202a4807b7/node_modules/.bin/govuk-prototype-kit migrate
Started [Check migration is being applied to a pre v13 prototype]
Succeeded [Check migration is being applied to a pre v13 prototype]
2024-01-19T16:23:16.858Z
cwd: ~/GitHub Prototypes/srel-prototype
package: govuk-prototype-kit@13.16.0
argv: /usr/local/bin/node ~/GitHub Prototypes/srel-prototype/node_modules/.bin/govuk-prototype-kit migrate -- ~/GitHub Prototypes/srel-prototype
Started [Migrate config.js to config.json]
Started [Update application SCSS file]
Started [Deleted files that are no longer needed]
Started [Deleted directories that are no longer needed]
Started [Delete .port.tmp]
Started [Delete listen-on-port.js]
Started [Delete server.js]
Started [Delete start.js]
Started [Delete Procfile]
Started [Delete VERSION.txt]
Started [Delete app/assets/sass/application-ie8.scss]
Started [Delete app/assets/sass/unbranded-ie8.scss]
Started [Remove unused directory lib]
Started [Remove unused directory docs]
Started [Remove unused directory public]
Succeeded [Migrate config.js to config.json]
Succeeded [Delete .port.tmp]
Succeeded [Delete listen-on-port.js]
Succeeded [Delete server.js]
Succeeded [Delete start.js]
Succeeded [Delete Procfile]
Succeeded [Delete VERSION.txt]
Succeeded [Delete app/assets/sass/application-ie8.scss]
Succeeded [Delete app/assets/sass/unbranded-ie8.scss]
Succeeded [Deleted files that are no longer needed]
Found [// Add your routes here - above the module.exports line] in [app/routes.js], replacing
Started [Overwrite app/views/layout.html]
Keeping these lines from old file
Started [Overwrite app/filters.js]
Started [Delete app/assets/images/separator.png]
Started [Delete app/assets/images/separator-2x.png]
Started [Delete app/views/includes/scripts.html]
Started [Delete app/assets/images/unbranded.ico]
Started [Delete app/assets/sass/unbranded.scss]
Started [Delete app/views/includes/breadcrumb_examples.html]
Started [Delete app/assets/sass/patterns/_contents-list.scss]
Found [// Add extra styles here, or re-organise the Sass files in whichever way makes most sense to you] in [app/assets/sass/application.scss], replacing
Started [Delete app/assets/javascripts/jquery-1.11.3.js]
Started [Delete app/views/includes/head.html]
Started [Delete app/assets/sass/patterns/_pagination.scss]
Started [Delete app/assets/sass/patterns/_mainstream-guide.scss]
Started [Delete app/assets/sass/patterns/_related-items.scss]
Started [Delete app/assets/sass/patterns/_task-list.scss]
Failed [Overwrite app/views/layout.html]
Started [Update app/filters.js]
Started [Delete app/views/layout_unbranded.html]
Started [Delete app/assets/javascripts/auto-store-data.js]
Failed [Delete app/views/includes/scripts.html]
Failed [Delete app/assets/sass/unbranded.scss]
Keeping these lines from old file
Started [Overwrite app/assets/javascripts/application.js]
Started [Update app/assets/javascripts/application.js]
Succeeded [Delete app/assets/images/separator.png]
Succeeded [Delete app/assets/images/separator-2x.png]
Succeeded [Delete app/assets/images/unbranded.ico]
Succeeded [Delete app/assets/sass/patterns/_contents-list.scss]
Succeeded [Delete app/views/includes/breadcrumb_examples.html]
Succeeded [Delete app/assets/javascripts/jquery-1.11.3.js]
Succeeded [Delete app/views/includes/head.html]
Succeeded [Delete app/assets/sass/patterns/_pagination.scss]
Succeeded [Delete app/assets/sass/patterns/_related-items.scss]
Succeeded [Delete app/assets/sass/patterns/_mainstream-guide.scss]
Succeeded [Delete app/assets/sass/patterns/_task-list.scss]
Succeeded [Delete app/assets/javascripts/auto-store-data.js]
Succeeded [Delete app/views/layout_unbranded.html]
Succeeded [Update application SCSS file]
//,// For guidance on how to create routes see:,// https://prototype-kit.service.gov.uk/docs/create-routes,//,,const govukPrototypeKit = require('govuk-prototype-kit'),const router = govukPrototypeKit.requests.setupRouter(),,// Add your routes here,,,module.exports = router,,,// VERSION-1 (ARCHIVED),router.post('/claimant-journey/who-is-applying/answer', function (req, res) {,    var whoIsApplying = req.session.data['who-is-applying'],,    // Check whether the variable matches a condition,    if ((whoIsApplying == "I am applying for myself") || (whoIsApplying == "I am applying for someone else")){,      // Send user to next page,      res.redirect('/claimant-journey/version-1/questions-v1/special-rules'),    } else {,      // Send user to ineligible page,      res.redirect('/claimant-journey/version-1/questions-v2/'),    },}),,,// VERSION-2,router.post('/srel-branching-options/doctor-said-12-months/answer', function (req, res) {,  var doctorSaid12Months = req.session.data['doctor-said-12-months'],,  // Check whether the variable matches a condition,  if (doctorSaid12Months == "yes"){,    // Send user to next page,    res.redirect('/srel-branching-options/what-is-your-dob'),  } else {,    // Send user to ineligible page,    res.redirect('/srel-branching-options/not-eligible/apply-through-normal-route'),  },}),,router.post('/srel-branching-options/are-you-a-parent-guardian/answer', function (req, res) {,  var srelAreYouAParentOrGuardian = req.session.data['srelAreYouAParentOrGuardian'],,  // Check whether the variable matches a condition,  if (srelAreYouAParentOrGuardian == "yes"){,    // Send user to next page,    res.redirect('/srel-branching-options/national-insurance-number'),  } else {,    // Send user to ineligible page,    res.redirect('/srel-branching-options/not-eligible/need-to-be-parent-or-guardian'),  },}),,router.post('/auth-onboard-v01/who-is-applying/answer', function (req, res) {,  var whoIsApplying = req.session.data['who-is-applying'],,  // Check whether the variable matches a condition,  if (whoIsApplying == "Myself"){,    // Send user to next page,    res.redirect('/auth-onboard-v01/sign-in'),  } else {,    // Send user to ineligible page,    res.redirect('/auth-onboard-v01/how-do-you-know-the-applicant'),  },}),,,,,router.post('/hcp-e2e-journey-v01/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v01/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v01/account-d-dashboard'),  },}),router.post('/hcp-e2e-journey-v01/reminders-1-new/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v01/reminders-2-new'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v01/account-new-dashboard'),  },}),router.post('/hcp-e2e-journey-v02/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v02/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v02/account-d-dashboard'),  },}),router.post('/hcp-e2e-journey-v03/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v03/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v03/account-d-dashboard'),  },}),router.post('/hcp-e2e-journey-v04/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v04/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v04/reminder-settings'),  },}),router.post('/hcp-e2e-journey-v04/reminders-1-new/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v04/reminders-2-new'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v04/account-new-dashboard'),  },}),router.post('/hcp-e2e-journey-v05/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v05/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v05/account-d-dashboard'),  },}),router.post('/hcp-e2e-journey-v06/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v06/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v06/account-d-dashboard'),  },}),router.post('/hcp-e2e-journey-v07/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v07/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v07/reminder-settings'),  },}),router.post('/hcp-e2e-journey-v07/reminders-1-new/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v07/reminders-2-new'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v07/account-new-dashboard'),  },}),router.post('/hcp-e2e-journey-v08/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v08/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v08/account-d-dashboard'),  },}),router.post('/hcp-e2e-journey-v09/reminders-1/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-v09/reminders-2'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-v09/account-d-dashboard'),  },}),,,// Run this code when user wants to delete a form,router.post('/hcp-e2e-journey-v04/delete-form-answer', function (req, res) {,,  // Make a variable and give it the value from 'how-many-balls',  var deleteForms = req.session.data['want-to-delete'],,  // Check whether the variable matches a condition,  if (deleteForms == "Yes"){,    // Send user to next page,    res.redirect('/hcp-e2e-journey-v04/incompleted-sr1-forms-deleted'),  } else {,    // Send user to ineligible page,    res.redirect('/hcp-e2e-journey-v04/edit-incomplete-form'),  },,}),router.post('/hcp-e2e-journey-v05/delete-form-answer', function (req, res) {,,  // Make a variable and give it the value from 'how-many-balls',  var deleteForms = req.session.data['want-to-delete'],,  // Check whether the variable matches a condition,  if (deleteForms == "Yes"){,    // Send user to next page,    res.redirect('/hcp-e2e-journey-v05/incompleted-sr1-forms-deleted'),  } else {,    // Send user to ineligible page,    res.redirect('/hcp-e2e-journey-v05/edit-incomplete-form'),  },,}),router.post('/hcp-e2e-journey-v06/delete-form-answer', function (req, res) {,,  // Make a variable and give it the value from 'how-many-balls',  var deleteForms = req.session.data['want-to-delete'],,  // Check whether the variable matches a condition,  if (deleteForms == "Yes"){,    // Send user to next page,    res.redirect('/hcp-e2e-journey-v06/incompleted-sr1-forms-deleted'),  } else {,    // Send user to ineligible page,    res.redirect('/hcp-e2e-journey-v06/edit-incomplete-form'),  },,}),router.post('/hcp-e2e-journey-v07/delete-form-answer', function (req, res) {,,  // Make a variable and give it the value from 'how-many-balls',  var deleteForms = req.session.data['want-to-delete'],,  // Check whether the variable matches a condition,  if (deleteForms == "Yes"){,    // Send user to next page,    res.redirect('/hcp-e2e-journey-v07/incompleted-sr1-forms-deleted'),  } else {,    // Send user to ineligible page,    res.redirect('/hcp-e2e-journey-v07/edit-incomplete-form'),  },,}),router.post('/hcp-e2e-journey-v08/delete-form-answer', function (req, res) {,,  // Make a variable and give it the value from 'how-many-balls',  var deleteForms = req.session.data['want-to-delete'],,  // Check whether the variable matches a condition,  if (deleteForms == "Yes"){,    // Send user to next page,    res.redirect('/hcp-e2e-journey-v08/incompleted-sr1-forms-deleted'),  } else {,    // Send user to ineligible page,    res.redirect('/hcp-e2e-journey-v08/edit-incomplete-form'),  },,}),,router.post('/hcp-e2e-journey-v09/delete-form-answer', function (req, res) {,,  // Make a variable and give it the value from 'how-many-balls',  var deleteForms = req.session.data['want-to-delete'],,  // Check whether the variable matches a condition,  if (deleteForms == "Yes"){,    // Send user to next page,    res.redirect('/hcp-e2e-journey-v09/incompleted-sr1-forms-deleted'),  } else {,    // Send user to ineligible page,    res.redirect('/hcp-e2e-journey-v09/edit-incomplete-form'),  },,}),,router.post('/hcp-e2e-journey-mvp01/organisation-registered/answer', function (req, res) {,  var receiveReminder = req.session.data['receiveReminder'],,  // Check whether the variable matches a condition,  if (receiveReminder == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp01/organisation-signin-page'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp01/no-permission'),  },}),,router.post('/hcp-e2e-journey-mvp01/signin-page/answer', function (req, res) {,  var receiveReminder = req.session.data['organisationSignin'],,  // Check whether the variable matches a condition,  if (receiveReminder == "NHS England"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp01/organisation-signin-page'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp01/no-permission'),  },}),,router.post('/hcp-e2e-journey-mvp02/sr1-form-09-radio/answer', function (req, res) {,  var haveOtherDiagnoses = req.session.data['haveOtherDiagnoses'],,  // Check whether the variable matches a condition,  if (haveOtherDiagnoses == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp02/sr1-form-09-input'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp02/sr1-form-10'),  },}),,router.post('/hcp-e2e-journey-mvp02/sr1-form-05-radio/answer', function (req, res) {,  var niNo = req.session.data['niNo'],,  // Check whether the variable matches a condition,  if (niNo == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp02/sr1-form-05-input'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp02/sr1-form-07');,  },}),,router.post('/hcp-e2e-journey-mvp02/signin-page/answer', function (req, res) {,  var receiveReminder = req.session.data['organisationSignin'],,  // Check whether the variable matches a condition,  if (receiveReminder == "NHS England"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp02/organisation-signin-page'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp02/no-permission'),  },}),,router.post('/hcp-e2e-journey-mvp03/sr1-form-09-radio/answer', function (req, res) {,  var otherRelevantDiagnosis = req.session.data['otherRelevantDiagnosis'],,  // Check whether the variable matches a condition,  if (otherRelevantDiagnosis == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp03/sr1-form-09-input'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp03/sr1-form-10'),  },}),,router.post('/hcp-e2e-journey-mvp03/sr1-form-05-radio/answer', function (req, res) {,  var niNo = req.session.data['niNo'],,  // Check whether the variable matches a condition,  if (niNo == "Yes"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp03/sr1-form-05-input'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp03/sr1-form-sections');,  },}),,router.post('/hcp-e2e-journey-mvp03/profile-02/answer', function (req, res) {,  var yourRole = req.session.data['yourRole'],,  // Check whether the variable matches a condition,  if (yourRole == "Other"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp03/profile-02-other'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp03/profile-03');,  },}),,router.post('/hcp-e2e-journey-mvp03/signin-page/answer', function (req, res) {,  var receiveReminder = req.session.data['organisationSignin'],,  // Check whether the variable matches a condition,  if (receiveReminder == "NHS England"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp03/organisation-signin-page'),  } else if (receiveReminder == "NHS Scotland"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp03/no-permission-scotland'),  } else if (receiveReminder == "NHS Wales"){,    // Send user to next reminder page,    res.redirect('/hcp-e2e-journey-mvp03/no-permission-wales'),  } else {,    // Send user to the account dashboard page,    res.redirect('/hcp-e2e-journey-mvp03/no-permission-northern-ireland'),  },}),,router.post('/hcp-e2e-journey-mvp03/cookies/answer', function (req, res) {,  var cookiesselection = req.session.data['google_analytics'],,  // Check whether the variable matches a condition,  if (cookiesselection == "yes"){,    // Send user to cookie accepted page,    res.redirect('/hcp-e2e-journey-mvp03/cookies-accept'),  }  else {,    // Send user to cookies rejected page,    res.redirect('/hcp-e2e-journey-mvp03/cookies-reject'),  },}),,router.post('/hcp-e2e-journey-mvp03/cookies-reject/answer', function (req, res) {,  var cookiesselection = req.session.data['google_analytics'],,  // Check whether the variable matches a condition,  if (cookiesselection == "yes"){,    // Send user to cookie accepted page,    res.redirect('/hcp-e2e-journey-mvp03/cookies-accept'),  }  else {,    // Send user to cookies rejected page,    res.redirect('/hcp-e2e-journey-mvp03/cookies-reject'),  },}),,router.post('/hcp-e2e-journey-mvp03/cookies-accept/answer', function (req, res) {,  var cookiesselection = req.session.data['google_analytics'],,  // Check whether the variable matches a condition,  if (cookiesselection == "yes"){,    // Send user to cookie accepted page,    res.redirect('/hcp-e2e-journey-mvp03/cookies-accept'),  }  else {,    // Send user to cookies rejected page,    res.redirect('/hcp-e2e-journey-mvp03/cookies-reject'),  },}),,router.post('/private-beta01/sr1-form-09-radio/answer', function (req, res) {,  var otherRelevantDiagnosis = req.session.data['otherRelevantDiagnosis'],,  // Check whether the variable matches a condition,  if (otherRelevantDiagnosis == "Yes"){,    // Send user to next reminder page,    res.redirect('/private-beta01/sr1-form-09-input'),  } else {,    // Send user to the account dashboard page,    res.redirect('/private-beta01/sr1-form-10'),  },}),,router.post('/private-beta01/sr1-form-05-radio/answer', function (req, res) {,  var niNo = req.session.data['niNo'],,  // Check whether the variable matches a condition,  if (niNo == "Yes"){,    // Send user to next reminder page,    res.redirect('/private-beta01/sr1-form-05-input'),  } else {,    // Send user to the account dashboard page,    res.redirect('/private-beta01/sr1-form-sections');,  },}),,router.post('/private-beta01/profile-02/answer', function (req, res) {,  var yourRole = req.session.data['yourRole'],,  // Check whether the variable matches a condition,  if (yourRole == "Other"){,    // Send user to next reminder page,    res.redirect('/private-beta01/profile-02-other'),  } else {,    // Send user to the account dashboard page,    res.redirect('/private-beta01/profile-03');,  },}),,router.post('/private-beta01/signin-page/answer', function (req, res) {,  var receiveReminder = req.session.data['organisationSignin'],,  // Check whether the variable matches a condition,  if (receiveReminder == "NHS England"){,    // Send user to next reminder page,    res.redirect('/private-beta01/organisation-signin-page'),  } else if (receiveReminder == "NHS Scotland"){,    // Send user to next reminder page,    res.redirect('/private-beta01/no-permission-scotland'),  } else if (receiveReminder == "NHS Wales"){,    // Send user to next reminder page,    res.redirect('/private-beta01/no-permission-wales'),  } else {,    // Send user to the account dashboard page,    res.redirect('/private-beta01/no-permission-northern-ireland'),  },}),,router.post('/private-beta01/cookies/answer', function (req, res) {,  var cookiesselection = req.session.data['google_analytics'],,  // Check whether the variable matches a condition,  if (cookiesselection == "yes"){,    // Send user to cookie accepted page,    res.redirect('/private-beta01/cookies-accept'),  }  else {,    // Send user to cookies rejected page,    res.redirect('/private-beta01/cookies-reject'),  },}),,router.post('/private-beta01/cookies-reject/answer', function (req, res) {,  var cookiesselection = req.session.data['google_analytics'],,  // Check whether the variable matches a condition,  if (cookiesselection == "yes"){,    // Send user to cookie accepted page,    res.redirect('/private-beta01/cookies-accept'),  }  else {,    // Send user to cookies rejected page,    res.redirect('/private-beta01/cookies-reject'),  },}),,router.post('/private-beta01/cookies-accept/answer', function (req, res) {,  var cookiesselection = req.session.data['google_analytics'],,  // Check whether the variable matches a condition,  if (cookiesselection == "yes"){,    // Send user to cookie accepted page,    res.redirect('/private-beta01/cookies-accept'),  }  else {,    // Send user to cookies rejected page,    res.redirect('/private-beta01/cookies-reject'),  },})
Found [module.exports = router;,module.exports = router] in [app/routes.js], removing
Succeeded [Remove unused directory lib]
Succeeded [Update app/assets/javascripts/application.js]
Succeeded [Update app/filters.js]
Succeeded [Update routes file]
Succeeded [Overwrite app/assets/javascripts/application.js]
Succeeded [Overwrite app/filters.js]
Succeeded [Remove unused directory public]
Succeeded [Remove unused directory docs]
Succeeded [Deleted directories that are no longer needed]
ENOENT: no such file or directory, stat '/Users/mattia.gobbo/GitHub Prototypes/srel-prototype/app/views/layout_unbranded.html'
Error: ENOENT: no such file or directory, stat '/Users/mattia.gobbo/GitHub Prototypes/srel-prototype/app/views/layout_unbranded.html'
    at async Object.stat (node:internal/fs/promises:1025:18)
    at async /Users/mattia.gobbo/GitHub Prototypes/srel-prototype/node_modules/govuk-prototype-kit/lib/utils/index.js:247:22
    at async asyncSeriesMap (/Users/mattia.gobbo/GitHub Prototypes/srel-prototype/node_modules/govuk-prototype-kit/lib/utils/asyncSeriesMap.js:5:18)
    at async searchAndReplaceFiles (/Users/mattia.gobbo/GitHub Prototypes/srel-prototype/node_modules/govuk-prototype-kit/lib/utils/index.js:245:25)
    at async updateUnbrandedLayouts (/Users/mattia.gobbo/GitHub Prototypes/srel-prototype/node_modules/govuk-prototype-kit/migrator/migration-steps.js:256:19)
    at async Promise.all (index 7)
    at async Object.migrate (/Users/mattia.gobbo/GitHub Prototypes/srel-prototype/node_modules/govuk-prototype-kit/migrator/index.js:128:33)
    at async runMigrate (/Users/mattia.gobbo/GitHub Prototypes/srel-prototype/node_modules/govuk-prototype-kit/bin/cli:391:5)
